plugins {
  id 'maven-publish'
}

task sourcesJar(type: Jar) {
  classifier = "sources"
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
  classifier = "javadoc"
  from javadoc.destinationDir
}

[jar, sourcesJar, javadocJar].each { task ->
  task.from(rootDir) {
    include 'LICENSE'
    include 'NOTICE'
  }
}

def pomPath = "$buildDir/${name}.pom"
model {
  tasks.generatePomFileForMavenJavaPublication {
    destination = file("$pomPath")
  }
  tasks.jar {
    dependsOn tasks.generatePomFileForMavenJavaPublication
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact sourcesJar
      artifact javadocJar

      pom {
        name = 'OpenHouse'
        description = 'Control Plane for Tables in Open Data Lakehouse'
        url = 'https://github.com/linkedin/openhouse'

        licenses {
          license {
            name = 'BSD 2-Clause License'
            url = 'https://raw.githubusercontent.com/linkedin/openhouse/main/LICENSE'
          }
        }

        scm {
          connection = 'scm:git:git://github.com/linkedin/openhouse.git'
          developerConnection = 'scm:git:ssh://github.com/linkedin/openhouse.git'
          url = 'https://github.com/linkedin/openhouse'
        }
      }
    }
  }
  repositories {
    mavenLocal()
    maven {
      name = 'LinkedInJFrog'
      url = 'https://linkedin.jfrog.io/artifactory/openhouse'
      if (System.getenv('JFROG_USERNAME') != null && System.getenv('JFROG_API_KEY') != null) {
        credentials {
          username System.getenv('JFROG_USERNAME')
          password System.getenv('JFROG_API_KEY')
        }
      }
    }
  }
}

artifacts {
  archives file: file('$pomPath'), name: '$name', type: 'pom'
  archives jar
  archives sourcesJar
  archives javadocJar
}